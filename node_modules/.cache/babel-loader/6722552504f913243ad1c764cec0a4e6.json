{"ast":null,"code":"var _jsxFileName = \"/Users/cmaur/Desktop/Software Engineering/boggle-react-app/src/App.js\";\nimport React, { useState } from 'react';\nimport BoggleSolver from './Boggle Implementation/boggle_solver'; // import StartButton from './StartButton';\n// import StopButton from './StopButton';\n\nimport { Grid, Button, InputLabel, NativeSelect } from '@material-ui/core';\nimport Timer from 'react-compound-timer';\nimport * as firebase from 'firebase';\nimport './App.css';\nimport TextInput from './AnswerInput';\nimport googleSignIn from './googleSignIn';\nconst gridItems1 = {\n  0: {\n    size: 3,\n    label: \"O\"\n  },\n  1: {\n    size: 3,\n    label: \"I\"\n  },\n  2: {\n    size: 3,\n    label: \"H\"\n  }\n};\nconst gridItems2 = {\n  0: {\n    size: 3,\n    label: \"V\"\n  },\n  1: {\n    size: 3,\n    label: \"O\"\n  },\n  2: {\n    size: 3,\n    label: \"D\"\n  }\n};\nconst gridItems3 = {\n  0: {\n    size: 3,\n    label: \"U\"\n  },\n  1: {\n    size: 3,\n    label: \"S\"\n  },\n  2: {\n    size: 3,\n    label: \"O\"\n  }\n};\nvar validAnswers = [];\n\nconst findAllSolutions = require(\"./Boggle Implementation/boggle_solver\");\n\nasync function getUserInput(promptText, grid, dict) {\n  var value = \"\";\n  var trueGrid = []; // var grid = Array.from(grid);\n\n  console.log(grid.size);\n\n  for (let i = 1; i <= grid.size; i++) {\n    trueGrid.push(grid.grid[i]);\n  }\n\n  console.log(trueGrid);\n  const promptResoponse = prompt(promptText);\n  console.log(promptResoponse);\n  let solutions = findAllSolutions.findAllSolutions(trueGrid, dict);\n  solutions.forEach(word => {\n    let response = promptResoponse.toLowerCase();\n    console.log(response);\n\n    if (word === response) {\n      console.log(\"true\");\n      value = response;\n      console.log(value);\n    }\n  });\n  return value;\n}\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      startState: false,\n      answers: validAnswers,\n      word: '',\n      correct: [],\n      grids: [],\n      timer: undefined,\n      line1: [],\n      line2: [],\n      line3: [],\n      puzzle: 0\n    };\n    this.ref = firebase.firestore();\n  }\n\n  async componentDidMount() {\n    this.unsubscribe = this.ref.collection('3x3').onSnapshot(async querySnapshot => {\n      var gridArray = [];\n      querySnapshot.forEach(doc => {\n        gridArray.push({\n          grid: doc.data().grid,\n          dictionary: doc.data().dictionary,\n          size: doc.data().size,\n          highScore: doc.data().highScore\n        });\n      });\n      console.log(gridArray[this.state.puzzle].dictionary);\n      this.setState({\n        grids: gridArray,\n        line1: gridArray[this.state.puzzle].grid[1],\n        line2: gridArray[this.state.puzzle].grid[2],\n        line3: gridArray[this.state.puzzle].grid[3]\n      });\n      var mapToGrid = [];\n\n      for (let i = 1; i <= gridArray[this.state.puzzle].size; i++) {\n        mapToGrid.push(gridArray[this.state.puzzle].grid[i]);\n      }\n\n      console.log(mapToGrid);\n      let solutions = [];\n      solutions = await findAllSolutions.findAllSolutions(mapToGrid, gridArray[this.state.puzzle].dictionary);\n      console.log(solutions);\n      await solutions.forEach(answer => {\n        validAnswers.push(answer + \" :\");\n      });\n      this.setState({\n        answers: validAnswers\n      });\n      console.log(this.state.answers);\n      this.unsubscribe();\n    });\n    var trueGrid_Mount = [];\n\n    for (let i = 1; i <= this.state.grids.size; i++) {\n      trueGrid_Mount.push(this.state.grids.grid[i]);\n    }\n\n    console.log(this.state.grids);\n  }\n\n  async updateBoard() {\n    validAnswers = [];\n    this.setState({\n      word: '',\n      correct: [],\n      timer: 0\n    });\n    this.componentDidMount();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"header\", {\n      className: \"App-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }\n    }, this.state.state == true && /*#__PURE__*/React.createElement(Timer, {\n      initialTime: 0,\n      direction: \"forward\",\n      timeToUpdate: 10,\n      checkpoints: [{\n        time: 0,\n        callback: () => alert('countdown finished')\n      }],\n      onStart: () => {\n        this.setState({\n          timer: Timer.Seconds + Timer.Minutes\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 40\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        fontFamily: 'Helvetica Neue'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        fontSize: 32\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Timer.Minutes, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 17\n      }\n    }), \" minutes\", /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Timer.Seconds, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 17\n      }\n    }), \" seconds\"))), /*#__PURE__*/React.createElement(\"header\", {\n      className: \"Header-Title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 11\n      }\n    }, \"Boggle Game\"), this.state.state === true && /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 41\n      }\n    }, \"Correct Answers\"), this.state.state === true && /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 41\n      }\n    }, this.state.correct), this.state.state === false && /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 42\n      }\n    }, \"Valid Answers\"), this.state.state === false && /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 42\n      }\n    }, this.state.answers), this.state.state === false && /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 42\n      }\n    }, \"Your Correct Answers\"), this.state.state === false && /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 42\n      }\n    }, this.state.correct), this.state.state === true && /*#__PURE__*/React.createElement(Grid, {\n      className: \"Grid\",\n      container: true,\n      justify: \"center\",\n      spacing: 100,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      className: \"Grid-line\",\n      container: true,\n      justify: \"center\",\n      item: true,\n      xs: 12,\n      spacing: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 13\n      }\n    }, Object.keys(this.state.line1).map(rowKey => {\n      return /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        key: rowKey,\n        xs: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 19\n        }\n      }, this.state.line1[rowKey]);\n    })), /*#__PURE__*/React.createElement(Grid, {\n      className: \"Grid-line\",\n      container: true,\n      justify: \"center\",\n      item: true,\n      xs: 12,\n      spacing: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 13\n      }\n    }, Object.keys(this.state.line2).map(rowKey => {\n      return /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        key: rowKey,\n        xs: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 19\n        }\n      }, this.state.line2[rowKey]);\n    })), /*#__PURE__*/React.createElement(Grid, {\n      className: \"Grid-line\",\n      container: true,\n      justify: \"center\",\n      item: true,\n      xs: 12,\n      spacing: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 13\n      }\n    }, Object.keys(this.state.line3).map(rowKey => {\n      return /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        key: rowKey,\n        xs: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 19\n        }\n      }, this.state.line3[rowKey]);\n    }))), this.state.state === true && /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"white\",\n      prompt: \"Enter Word\",\n      onClick: () => {\n        getUserInput(prompt, this.state.grids[this.state.puzzle], this.state.grids[this.state.puzzle].dictionary).then(function (result) {\n          console.log(\"Returned\");\n          console.log(result);\n          return result;\n        }).then(value => {\n          if (!this.state.correct.includes(value + \" \") && value != \"\") {\n            this.state.correct.push(value + \" \");\n            this.setState({\n              correct: this.state.correct\n            });\n            console.log(\"STATE:\" + this.state.correct);\n          } else if (value == \"\") {\n            alert(\"This word is not in the dictionary. Please enter another word\");\n          } else {\n            alert(\"You have already found this word. Please enter another word\");\n          }\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 41\n      }\n    }, \"Enter Word\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Start-Button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: () => {\n        googleSignIn();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 15\n      }\n    }, \" SignIn with Google \")), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: () => {\n        console.log(\"Pressed\");\n        console.log(this.state.grids.grid);\n        this.setState({\n          state: true\n        });\n        this.updateBoard();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 15\n      }\n    }, \" Start \")), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 14\n      }\n    }, /*#__PURE__*/React.createElement(InputLabel, {\n      htmlFor: \"select\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 15\n      }\n    }, \"Load Challenge\"), /*#__PURE__*/React.createElement(NativeSelect, {\n      id: \"select\",\n      onChange: value => {\n        console.log(value.target.value);\n        this.setState({\n          puzzle: value.target.value,\n          state: true\n        });\n        this.updateBoard();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 17\n      }\n    }, \"1 \", this.state.grids[0]), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 17\n      }\n    }, \"2 \", this.state.grids[1])))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Stop-Button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"secondary\",\n      onClick: () => {\n        console.log(\"Pressed\");\n        this.setState({\n          state: false\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 13\n      }\n    }, \" Stop \"))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/cmaur/Desktop/Software Engineering/boggle-react-app/src/App.js"],"names":["React","useState","BoggleSolver","Grid","Button","InputLabel","NativeSelect","Timer","firebase","TextInput","googleSignIn","gridItems1","size","label","gridItems2","gridItems3","validAnswers","findAllSolutions","require","getUserInput","promptText","grid","dict","value","trueGrid","console","log","i","push","promptResoponse","prompt","solutions","forEach","word","response","toLowerCase","App","Component","constructor","props","state","startState","answers","correct","grids","timer","undefined","line1","line2","line3","puzzle","ref","firestore","componentDidMount","unsubscribe","collection","onSnapshot","querySnapshot","gridArray","doc","data","dictionary","highScore","setState","mapToGrid","answer","trueGrid_Mount","updateBoard","render","time","callback","alert","Seconds","Minutes","fontFamily","fontSize","Object","keys","map","rowKey","then","result","includes","target"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport BoggleSolver from './Boggle Implementation/boggle_solver';\n// import StartButton from './StartButton';\n// import StopButton from './StopButton';\nimport { Grid, Button, InputLabel, NativeSelect } from '@material-ui/core';\nimport Timer from 'react-compound-timer'\nimport * as firebase from 'firebase';\nimport './App.css';\nimport TextInput from './AnswerInput';\nimport googleSignIn from './googleSignIn';\n\n\nconst gridItems1 = {\n  0: { size: 3, label: \"O\" },\n  1: { size: 3, label: \"I\" },\n  2: { size: 3, label: \"H\" },\n}\n\nconst gridItems2 = {\n  0: { size: 3, label: \"V\" },\n  1: { size: 3, label: \"O\" },\n  2: { size: 3, label: \"D\" },\n}\n\nconst gridItems3 = {\n  0: { size: 3, label: \"U\" },\n  1: { size: 3, label: \"S\" },\n  2: { size: 3, label: \"O\" },\n}\n\n\n\nvar validAnswers = [];\n\nconst findAllSolutions = require(\"./Boggle Implementation/boggle_solver\");\n\n\nasync function getUserInput(promptText, grid, dict) {\n\n  var value = \"\";\n  var trueGrid = [];\n  // var grid = Array.from(grid);\n  console.log(grid.size)\n\n  for (let i = 1; i <= grid.size; i++) {\n    trueGrid.push(grid.grid[i]);\n  }\n  console.log(trueGrid)\n  const promptResoponse = prompt(promptText)\n  console.log(promptResoponse);\n\n\n\n  let solutions = findAllSolutions.findAllSolutions(trueGrid, dict)\n\n  solutions.forEach(word => {\n    let response = promptResoponse.toLowerCase();\n    console.log(response)\n    if (word === response) {\n      console.log(\"true\")\n      value = response;\n      console.log(value)\n    }\n  })\n  return value;\n}\n\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      startState: false,\n      answers: validAnswers,\n      word: '',\n      correct: [],\n      grids: [],\n      timer: undefined,\n      line1: [],\n      line2: [],\n      line3: [],\n      puzzle: 0,\n    }\n    this.ref = firebase.firestore();\n  }\n\n  async componentDidMount() {\n\n    this.unsubscribe = this.ref.collection('3x3').onSnapshot(async (querySnapshot) => {\n      var gridArray = [];\n      querySnapshot.forEach((doc) => {\n        gridArray.push({\n          grid: doc.data().grid,\n          dictionary: doc.data().dictionary,\n          size: doc.data().size,\n          highScore: doc.data().highScore,\n        })\n      })\n      console.log(gridArray[this.state.puzzle].dictionary);\n      this.setState({\n        grids: gridArray,\n        line1: gridArray[this.state.puzzle].grid[1],\n        line2: gridArray[this.state.puzzle].grid[2],\n        line3: gridArray[this.state.puzzle].grid[3],\n      })\n\n      var mapToGrid = [];\n      for (let i = 1; i <= gridArray[this.state.puzzle].size; i++) {\n        mapToGrid.push(gridArray[this.state.puzzle].grid[i]);\n      }\n      console.log(mapToGrid)\n      let solutions = [];\n      solutions = await findAllSolutions.findAllSolutions(mapToGrid, gridArray[this.state.puzzle].dictionary)\n\n      console.log(solutions)\n      await solutions.forEach(answer => {\n        validAnswers.push(answer + \" :\")\n      })\n      this.setState({ answers: validAnswers})\n      console.log(this.state.answers)\n\n      this.unsubscribe();\n    })\n\n    var trueGrid_Mount = [];\n    for (let i = 1; i <= this.state.grids.size; i++) {\n      trueGrid_Mount.push(this.state.grids.grid[i]);\n    }\n    console.log(this.state.grids)\n\n\n\n  }\n\n  async updateBoard() {\n    validAnswers = []\n    this.setState({ word: '', correct: [], timer: 0});\n    this.componentDidMount();\n  }\n\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n\n          {/* Timer component */}\n          {this.state.state == true && <Timer\n            initialTime={0}\n            direction=\"forward\"\n            timeToUpdate={10}\n            checkpoints={[\n              {\n                time: 0,\n                callback: () => alert('countdown finished'),\n              },\n            ]}\n            onStart={() => { this.setState({ timer: Timer.Seconds + Timer.Minutes }) }}\n          >\n            <div style={{ fontFamily: 'Helvetica Neue' }}>\n              <div style={{ fontSize: 32 }}>\n                <Timer.Minutes /> minutes\n              <div></div>\n                <Timer.Seconds /> seconds\n              </div>\n            </div>\n          </Timer>}\n\n          {/* Title and corredt input list */}\n          <header className=\"Header-Title\">Boggle Game</header>\n          {this.state.state === true && <p>Correct Answers</p>}\n          {this.state.state === true && <p>{this.state.correct}</p>}\n\n          {/* Full answer list and correct answers submitted */}\n          {/* {this.state.state == false && <p>Time: {this.state.timer}</p>} */}\n          {this.state.state === false && <p>Valid Answers</p>}\n          {this.state.state === false && <p>{this.state.answers}</p>}\n          {this.state.state === false && <p>Your Correct Answers</p>}\n          {this.state.state === false && <p>{this.state.correct}</p>}\n\n          {/* 3 x 3 Grid */}\n          {this.state.state === true && <Grid className=\"Grid\" container justify=\"center\" spacing={100}>\n            {/* Row 1 */}\n            <Grid className=\"Grid-line\" container justify=\"center\" item xs={12} spacing={3}>\n\n              {Object.keys(this.state.line1).map((rowKey) => {\n                return (\n                  <Grid item key={rowKey} xs={3}>\n                    {this.state.line1[rowKey]}\n                  </Grid>\n                );\n              })}\n            </Grid>\n\n            {/* Row 2 */}\n            <Grid className=\"Grid-line\" container justify=\"center\" item xs={12} spacing={3}>\n              {Object.keys(this.state.line2).map((rowKey) => {\n                return (\n                  <Grid item key={rowKey} xs={3}>\n                    {this.state.line2[rowKey]}\n                  </Grid>\n                );\n              })}\n            </Grid>\n\n            {/* Row 3 */}\n            <Grid className=\"Grid-line\" container justify=\"center\" item xs={12} spacing={3}>\n              {Object.keys(this.state.line3).map((rowKey) => {\n                return (\n                  <Grid item key={rowKey} xs={3}>\n                    {this.state.line3[rowKey]}\n                  </Grid>\n                );\n              })}\n            </Grid>\n          </Grid>}\n\n\n          {/* <StartButton promptText=\"Start\" />\n          <StopButton promptText=\"Stop\" />\n          <TextInput promptText=\"Enter Word\" />   */}\n\n          {this.state.state === true && <Button variant=\"contained\" color=\"white\" prompt=\"Enter Word\" onClick={() => {\n            getUserInput(prompt, this.state.grids[this.state.puzzle], this.state.grids[this.state.puzzle].dictionary).then(function (result) {\n              console.log(\"Returned\");\n              console.log(result);\n              return result;\n            }).then((value) => {\n              if (!this.state.correct.includes(value + \" \") && (value != \"\")) {\n                this.state.correct.push(value + \" \")\n                this.setState({ correct: this.state.correct })\n                console.log(\"STATE:\" + this.state.correct)\n              } else if (value == \"\") {\n                alert(\"This word is not in the dictionary. Please enter another word\")\n              } else {\n                alert(\"You have already found this word. Please enter another word\")\n              }\n\n            })\n\n          }} >Enter Word</Button>}\n \n          <div className=\"Start-Button\">\n          <div>\n              <Button variant=\"contained\" color=\"primary\" onClick={() => {\n                googleSignIn();\n              }}> SignIn with Google </Button>\n            </div>\n\n            <div>\n              <Button variant=\"contained\" color=\"primary\" onClick={() => {\n                console.log(\"Pressed\");\n                console.log(this.state.grids.grid)\n                this.setState({ state: true });\n                this.updateBoard();\n              }}> Start </Button>\n            </div>\n  \n            {<div>\n              <InputLabel htmlFor=\"select\">Load Challenge</InputLabel>\n              <NativeSelect id=\"select\" onChange={(value) => { console.log(value.target.value); this.setState({puzzle: value.target.value, state: true}); this.updateBoard()\n              }}>\n                <option value=\"0\">1 {this.state.grids[0]}</option>\n                <option value=\"1\">2 {this.state.grids[1]}</option>\n              </NativeSelect>\n            </div>}\n\n          </div>\n\n          <div className=\"Stop-Button\">\n            <Button variant=\"contained\" color=\"secondary\" onClick={() => {\n              console.log(\"Pressed\");\n              this.setState({ state: false });\n              \n            }}> Stop </Button>\n          </div>\n\n\n        </header>\n      </div>\n    );\n  }\n\n}\n\nexport default App;\n\n"]},"metadata":{},"sourceType":"module"}