{"ast":null,"code":"var _jsxFileName = \"/Users/cmaur/Desktop/Software Engineering/boggle-react-app/src/App.js\";\nimport React from 'react';\nimport BoggleSolver from './Boggle Implementation/boggle_solver'; // import StartButton from './StartButton';\n// import StopButton from './StopButton';\n\nimport { Grid, Button, TextField, Input } from '@material-ui/core';\nimport './App.css'; // import TextInput from './AnswerInput';\n\nconst gridItems = {\n  0: {\n    size: 3,\n    label: \"A\"\n  },\n  1: {\n    size: 3,\n    label: \"B\"\n  },\n  2: {\n    size: 3,\n    label: \"C\"\n  },\n  3: {\n    size: 3,\n    label: \"D\"\n  }\n};\nvar validAnswers = [];\n\nconst findAllSolutions = require(\"./Boggle Implementation/boggle_solver\");\n\nfunction TextInput({\n  promptText\n}) {\n  const [text, setText] = useState(\"no text set\");\n\n  function getUserInput() {\n    const promptResoponse = prompt(promptText);\n    console.log(promptResoponse);\n    setText(promptResoponse);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => getUserInput(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }\n  }, \"Enter Word\"), text);\n}\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      startState: false,\n      answers: validAnswers,\n      word: ''\n    };\n  }\n\n  async componentDidMount() {\n    // const response = await new StartButton();\n    // console.log(response);\n    // this.setState({ startState: response.state.state });\n    // console.log(findAllSolutions)\n    let solutions = await findAllSolutions.findAllSolutions([['A', 'Qu'], ['C', 'D']], ['art', 'ego', 'gent', 'get', 'net', 'new', 'newt', 'prat', 'pry', 'qua', 'quart', 'quartz', 'rat', 'tar', 'tarp', 'ten', 'went', 'wet', 'arty', 'egg', 'not', 'quar', 'ab', 'abd', 'dca', 'qac']);\n    console.log(solutions); // this.setState({ answers: solutions})\n\n    console.log(this.state.answers);\n    await solutions.forEach(answer => {\n      validAnswers.push(answer + \" \");\n    });\n    console.log(this.state.answers);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"header\", {\n      className: \"App-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }\n    }, this.state.state === true && /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 41\n      }\n    }, \"Valid Answers\"), this.state.state === true && /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 41\n      }\n    }, this.state.answers), this.state.state === true && /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      justify: \"center\",\n      spacing: 100,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      justify: \"center\",\n      item: true,\n      xs: 12,\n      spacing: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }\n    }, Object.keys(gridItems).map(rowKey => {\n      return /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        key: rowKey,\n        xs: gridItems[rowKey].size,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 19\n        }\n      }, gridItems[rowKey].label);\n    })), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      justify: \"center\",\n      item: true,\n      xs: 12,\n      spacing: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }\n    }, Object.keys(gridItems).map(rowKey => {\n      return /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        key: rowKey,\n        xs: gridItems[rowKey].size,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 19\n        }\n      }, gridItems[rowKey].label);\n    })), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      justify: \"center\",\n      item: true,\n      xs: 12,\n      spacing: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 13\n      }\n    }, Object.keys(gridItems).map(rowKey => {\n      return /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        key: rowKey,\n        xs: gridItems[rowKey].size,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 19\n        }\n      }, gridItems[rowKey].label);\n    })), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      justify: \"center\",\n      item: true,\n      xs: 12,\n      spacing: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 13\n      }\n    }, Object.keys(gridItems).map(rowKey => {\n      return /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        key: rowKey,\n        xs: gridItems[rowKey].size,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 19\n        }\n      }, gridItems[rowKey].label);\n    }))), /*#__PURE__*/React.createElement(TextInput, {\n      promptText: \"Enter Word\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: () => {\n        console.log(\"Pressed\");\n        this.setState({\n          state: true\n        });\n        console.log(this.state.state);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 11\n      }\n    }, \" Start \"), /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"secondary\",\n      onClick: () => {\n        console.log(\"Pressed\");\n        this.setState({\n          state: false\n        });\n        console.log(this.state.state);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 11\n      }\n    }, \" Stop \")));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/cmaur/Desktop/Software Engineering/boggle-react-app/src/App.js"],"names":["React","BoggleSolver","Grid","Button","TextField","Input","gridItems","size","label","validAnswers","findAllSolutions","require","TextInput","promptText","text","setText","useState","getUserInput","promptResoponse","prompt","console","log","App","Component","constructor","props","state","startState","answers","word","componentDidMount","solutions","forEach","answer","push","render","Object","keys","map","rowKey","setState"],"mappings":"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","sourcesContent":["import React from 'react';\nimport BoggleSolver from './Boggle Implementation/boggle_solver';\n// import StartButton from './StartButton';\n// import StopButton from './StopButton';\nimport { Grid, Button, TextField, Input } from '@material-ui/core'\nimport './App.css';\n// import TextInput from './AnswerInput';\n\nconst gridItems = {\n  0: { size: 3, label: \"A\" },\n  1: { size: 3, label: \"B\" },\n  2: { size: 3, label: \"C\" },\n  3: { size: 3, label: \"D\" },\n}\n\nvar validAnswers = [];\n\nconst findAllSolutions = require(\"./Boggle Implementation/boggle_solver\");\n\n\nfunction TextInput({promptText}) {\n  const [text, setText] = useState(\"no text set\");\n  \n  function getUserInput() {\n      const promptResoponse = prompt(promptText)\n      console.log(promptResoponse);\n      setText(promptResoponse);\n  }\n\n  return(\n      <div>\n          <button onClick={() => getUserInput()}>Enter Word</button>\n          {text}\n      </div>\n  )\n}\n\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      startState: false,\n      answers: validAnswers,\n      word: '',\n    }\n  }\n\n  async componentDidMount() {\n    // const response = await new StartButton();\n    // console.log(response);\n    // this.setState({ startState: response.state.state });\n    // console.log(findAllSolutions)\n    let solutions = await findAllSolutions.findAllSolutions([['A', 'Qu'],\n    ['C', 'D']], ['art', 'ego', 'gent', 'get', 'net', 'new', 'newt', 'prat',\n      'pry', 'qua', 'quart', 'quartz', 'rat', 'tar', 'tarp',\n      'ten', 'went', 'wet', 'arty', 'egg', 'not', 'quar', 'ab', 'abd', 'dca', 'qac'])\n\n    console.log(solutions)\n    // this.setState({ answers: solutions})\n    console.log(this.state.answers)\n\n    await solutions.forEach(answer => {\n      validAnswers.push(answer + \" \")\n    })\n\n    console.log(this.state.answers)\n\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          {this.state.state === true && <p>Valid Answers</p>}\n          {this.state.state === true && <p>{this.state.answers}</p>}\n          {/* <img src={logo} className=\"App-logo\" alt=\"logo\" /> */}\n\n          {/* <a\n            className=\"App-link\"\n            href=\"https://reactjs.org\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Learn React\n          </a> */}\n\n\n          {this.state.state === true && <Grid container justify=\"center\" spacing={100}>\n            {/* Row 1 */}\n            <Grid container justify=\"center\" item xs={12} spacing={3}>\n\n              {Object.keys(gridItems).map((rowKey) => {\n                return (\n                  <Grid item key={rowKey} xs={gridItems[rowKey].size}>\n                    {gridItems[rowKey].label}\n                  </Grid>\n                );\n              })}\n            </Grid>\n\n            {/* Row 2 */}\n            <Grid container justify=\"center\" item xs={12} spacing={3}>\n              {Object.keys(gridItems).map((rowKey) => {\n                return (\n                  <Grid item key={rowKey} xs={gridItems[rowKey].size}>\n                    {gridItems[rowKey].label}\n                  </Grid>\n                );\n              })}\n            </Grid>\n\n            {/* Row 3 */}\n            <Grid container justify=\"center\" item xs={12} spacing={3}>\n              {Object.keys(gridItems).map((rowKey) => {\n                return (\n                  <Grid item key={rowKey} xs={gridItems[rowKey].size}>\n                    {gridItems[rowKey].label}\n                  </Grid>\n                );\n              })}\n            </Grid>\n\n            {/* Row 4 */}\n            <Grid container justify=\"center\" item xs={12} spacing={3}>\n              {Object.keys(gridItems).map((rowKey) => {\n                return (\n                  <Grid item key={rowKey} xs={gridItems[rowKey].size}>\n                    {gridItems[rowKey].label}\n                  </Grid>\n                );\n              })}\n            </Grid>\n          </Grid>}\n\n\n          {/* <StartButton promptText=\"Start\" />\n          <StopButton promptText=\"Stop\" />  */}\n          <TextInput promptText=\"Enter Word\" />\n          <Button variant=\"contained\" color=\"primary\" onClick={() => {\n            console.log(\"Pressed\");\n            this.setState({ state: true });\n            console.log(this.state.state);\n          }}> Start </Button>\n\n          <Button variant=\"contained\" color=\"secondary\" onClick={() => {\n            console.log(\"Pressed\");\n            this.setState({ state: false });\n            console.log(this.state.state);\n          }}> Stop </Button>\n\n        </header>\n      </div>\n    );\n  }\n\n}\n\nexport default App;\n\n"]},"metadata":{},"sourceType":"module"}