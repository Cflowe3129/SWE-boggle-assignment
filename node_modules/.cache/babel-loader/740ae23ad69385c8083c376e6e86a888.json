{"ast":null,"code":"var _jsxFileName = \"/Users/cmaur/Desktop/Software Engineering/boggle-react-app/src/App.js\";\nimport React from 'react';\nimport BoggleSolver from './Boggle Implementation/boggle_solver'; // import StartButton from './StartButton';\n// import StopButton from './StopButton';\n\nimport { Grid, Button } from '@material-ui/core';\nimport './App.css';\nconst gridItems = {\n  0: {\n    size: 3,\n    label: \"A\"\n  },\n  1: {\n    size: 3,\n    label: \"B\"\n  },\n  2: {\n    size: 3,\n    label: \"C\"\n  },\n  3: {\n    size: 3,\n    label: \"D\"\n  }\n};\n\nconst findAllSolutions = require(\"./Boggle Implementation/boggle_solver\");\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      startState: false,\n      answers: []\n    };\n  }\n\n  async componentDidMount() {\n    // const response = await new StartButton();\n    // console.log(response);\n    // this.setState({ startState: response.state.state });\n    // console.log(findAllSolutions)\n    let solutions = await findAllSolutions.findAllSolutions([['A', 'Qu'], ['C', 'D']], ['art', 'ego', 'gent', 'get', 'net', 'new', 'newt', 'prat', 'pry', 'qua', 'quart', 'quartz', 'rat', 'tar', 'tarp', 'ten', 'went', 'wet', 'arty', 'egg', 'not', 'quar', 'ab', 'abd', 'dca', 'qac']);\n    console.log(solutions);\n    this.setState({\n      answers: solutions\n    });\n    console.log(answers);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"header\", {\n      className: \"App-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }\n    }, \"Words Found\"), this.state.state === true && /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      justify: \"center\",\n      spacing: 100,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      justify: \"center\",\n      item: true,\n      xs: 12,\n      spacing: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }\n    }, Object.keys(gridItems).map(rowKey => {\n      return /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        key: rowKey,\n        xs: gridItems[rowKey].size,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 19\n        }\n      }, gridItems[rowKey].label);\n    })), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      justify: \"center\",\n      item: true,\n      xs: 12,\n      spacing: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }\n    }, Object.keys(gridItems).map(rowKey => {\n      return /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        key: rowKey,\n        xs: gridItems[rowKey].size,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 19\n        }\n      }, gridItems[rowKey].label);\n    })), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      justify: \"center\",\n      item: true,\n      xs: 12,\n      spacing: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }\n    }, Object.keys(gridItems).map(rowKey => {\n      return /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        key: rowKey,\n        xs: gridItems[rowKey].size,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 19\n        }\n      }, gridItems[rowKey].label);\n    })), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      justify: \"center\",\n      item: true,\n      xs: 12,\n      spacing: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }\n    }, Object.keys(gridItems).map(rowKey => {\n      return /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        key: rowKey,\n        xs: gridItems[rowKey].size,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 19\n        }\n      }, gridItems[rowKey].label);\n    }))), /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: () => {\n        console.log(\"Pressed\");\n        this.setState({\n          state: true\n        });\n        console.log(this.state.state);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }\n    }, \" Start \"), /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"secondary\",\n      onClick: () => {\n        console.log(\"Pressed\");\n        this.setState({\n          state: false\n        });\n        console.log(this.state.state);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }\n    }, \" Stop \")));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/cmaur/Desktop/Software Engineering/boggle-react-app/src/App.js"],"names":["React","BoggleSolver","Grid","Button","gridItems","size","label","findAllSolutions","require","App","Component","constructor","props","state","startState","answers","componentDidMount","solutions","console","log","setState","render","Object","keys","map","rowKey"],"mappings":"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","sourcesContent":["import React from 'react';\nimport BoggleSolver from './Boggle Implementation/boggle_solver';\n// import StartButton from './StartButton';\n// import StopButton from './StopButton';\nimport { Grid, Button } from '@material-ui/core'\nimport './App.css';\n\nconst gridItems = {\n  0: { size: 3, label: \"A\" },\n  1: { size: 3, label: \"B\" },\n  2: { size: 3, label: \"C\" },\n  3: { size: 3, label: \"D\" },\n}\n\nconst findAllSolutions = require(\"./Boggle Implementation/boggle_solver\");\n\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      startState: false,\n      answers: [],\n    }\n  }\n\n  async componentDidMount() {\n    // const response = await new StartButton();\n    // console.log(response);\n    // this.setState({ startState: response.state.state });\n    // console.log(findAllSolutions)\n    let solutions = await findAllSolutions.findAllSolutions([['A', 'Qu'],\n    ['C', 'D']], ['art', 'ego', 'gent', 'get', 'net', 'new', 'newt', 'prat',\n      'pry', 'qua', 'quart', 'quartz', 'rat', 'tar', 'tarp',\n      'ten', 'went', 'wet', 'arty', 'egg', 'not', 'quar', 'ab', 'abd', 'dca', 'qac'])\n\n    console.log(solutions)\n    this.setState({ answers: solutions})\n    console.log(answers)\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <p>Words Found</p>\n\n          {/* <img src={logo} className=\"App-logo\" alt=\"logo\" /> */}\n\n          {/* <a\n            className=\"App-link\"\n            href=\"https://reactjs.org\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Learn React\n          </a> */}\n\n\n          {this.state.state === true && <Grid container justify=\"center\" spacing={100}>\n            {/* Row 1 */}\n            <Grid container justify=\"center\" item xs={12} spacing={3}>\n\n              {Object.keys(gridItems).map((rowKey) => {\n                return (\n                  <Grid item key={rowKey} xs={gridItems[rowKey].size}>\n                    {gridItems[rowKey].label}\n                  </Grid>\n                );\n              })}\n            </Grid>\n\n            {/* Row 2 */}\n            <Grid container justify=\"center\" item xs={12} spacing={3}>\n              {Object.keys(gridItems).map((rowKey) => {\n                return (\n                  <Grid item key={rowKey} xs={gridItems[rowKey].size}>\n                    {gridItems[rowKey].label}\n                  </Grid>\n                );\n              })}\n            </Grid>\n\n            {/* Row 3 */}\n            <Grid container justify=\"center\" item xs={12} spacing={3}>\n              {Object.keys(gridItems).map((rowKey) => {\n                return (\n                  <Grid item key={rowKey} xs={gridItems[rowKey].size}>\n                    {gridItems[rowKey].label}\n                  </Grid>\n                );\n              })}\n            </Grid>\n\n            {/* Row 4 */}\n            <Grid container justify=\"center\" item xs={12} spacing={3}>\n              {Object.keys(gridItems).map((rowKey) => {\n                return (\n                  <Grid item key={rowKey} xs={gridItems[rowKey].size}>\n                    {gridItems[rowKey].label}\n                  </Grid>\n                );\n              })}\n            </Grid>\n          </Grid>}\n\n\n          {/* <StartButton promptText=\"Start\" />\n          <StopButton promptText=\"Stop\" />  */}\n\n          <Button variant=\"contained\" color=\"primary\" onClick={() => {\n            console.log(\"Pressed\");\n            this.setState({ state: true });\n            console.log(this.state.state);\n          }}> Start </Button>\n\n          <Button variant=\"contained\" color=\"secondary\" onClick={() => {\n            console.log(\"Pressed\");\n            this.setState({ state: false });\n            console.log(this.state.state);\n          }}> Stop </Button>\n\n        </header>\n      </div>\n    );\n  }\n\n}\n\nexport default App;\n\n"]},"metadata":{},"sourceType":"module"}