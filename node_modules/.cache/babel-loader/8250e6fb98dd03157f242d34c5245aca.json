{"ast":null,"code":"var _jsxFileName = \"/Users/cmaur/Desktop/Software Engineering/boggle-react-app/src/App.js\";\nimport React, { useState } from 'react';\nimport BoggleSolver from './Boggle Implementation/boggle_solver'; // import StartButton from './StartButton';\n// import StopButton from './StopButton';\n\nimport { Grid, Button, TextField, Input } from '@material-ui/core';\nimport Timer from 'react-compound-timer';\nimport * as firebase from 'firebase';\nimport styles from './App.css';\nimport TextInput from './AnswerInput';\nconst gridItems1 = {\n  0: {\n    size: 3,\n    label: \"O\"\n  },\n  1: {\n    size: 3,\n    label: \"I\"\n  },\n  2: {\n    size: 3,\n    label: \"H\"\n  }\n};\nconst gridItems2 = {\n  0: {\n    size: 3,\n    label: \"V\"\n  },\n  1: {\n    size: 3,\n    label: \"O\"\n  },\n  2: {\n    size: 3,\n    label: \"D\"\n  }\n};\nconst gridItems3 = {\n  0: {\n    size: 3,\n    label: \"U\"\n  },\n  1: {\n    size: 3,\n    label: \"S\"\n  },\n  2: {\n    size: 3,\n    label: \"O\"\n  }\n};\nvar validAnswers = [];\n\nconst findAllSolutions = require(\"./Boggle Implementation/boggle_solver\");\n\nasync function getUserInput(promptText, grid, dict) {\n  var value = \"\";\n  var trueGrid = []; // var grid = Array.from(grid);\n\n  console.log(grid.size);\n\n  for (let i = 1; i <= grid.size; i++) {\n    trueGrid.push(grid.grid[i]);\n  }\n\n  console.log(trueGrid);\n  const promptResoponse = prompt(promptText);\n  console.log(promptResoponse);\n  let solutions = findAllSolutions.findAllSolutions(trueGrid, dict);\n  solutions.forEach(word => {\n    let response = promptResoponse.toLowerCase();\n    console.log(response);\n\n    if (word === response) {\n      console.log(\"true\");\n      value = response;\n      console.log(value);\n    }\n  });\n  return value;\n}\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      startState: false,\n      answers: validAnswers,\n      word: '',\n      correct: [],\n      grids: [],\n      timer: undefined\n    };\n    this.ref = firebase.firestore();\n  }\n\n  async componentDidMount() {\n    this.unsubscribe = this.ref.collection('3x3').onSnapshot(async querySnapshot => {\n      var gridArray = [];\n      querySnapshot.forEach(doc => {\n        gridArray.push({\n          grid: doc.data().grid,\n          dictionary: doc.data().dictionary,\n          size: doc.data().size\n        });\n      });\n      console.log(gridArray[0].dictionary);\n      this.setState({\n        grids: gridArray\n      });\n      var mapToGrid = [];\n\n      for (let i = 1; i <= gridArray[0].size; i++) {\n        mapToGrid.push(gridArray[0].grid[i]);\n      }\n\n      console.log(mapToGrid);\n      let solutions = await findAllSolutions.findAllSolutions(mapToGrid, gridArray[0].dictionary);\n      console.log(solutions);\n      await solutions.forEach(answer => {\n        validAnswers.push(answer + \" :\");\n      });\n      console.log(this.state.answers);\n      this.unsubscribe();\n    });\n    var trueGrid_Mount = [];\n\n    for (let i = 1; i <= this.state.grids.size; i++) {\n      trueGrid_Mount.push(this.state.grids.grid[i]);\n    }\n\n    console.log(this.state.grids);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"header\", {\n      className: \"App-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }\n    }, this.state.state == true && /*#__PURE__*/React.createElement(Timer, {\n      initialTime: 0,\n      direction: \"forward\",\n      timeToUpdate: 10,\n      checkpoints: [{\n        time: 0,\n        callback: () => alert('countdown finished')\n      }],\n      onPause: () => {\n        this.setState({\n          timer: Timer.Seconds + Timer.Minutes\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 40\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        fontFamily: 'Helvetica Neue'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        fontSize: 32\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Timer.Minutes, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 17\n      }\n    }), \" minutes\", /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Timer.Seconds, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 17\n      }\n    }), \" seconds\"))), /*#__PURE__*/React.createElement(\"header\", {\n      classname: styles.Title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 11\n      }\n    }, \"Boggle Game\"), this.state.state === true && /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 41\n      }\n    }, \"Correct Answers\"), this.state.state === true && /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 41\n      }\n    }, this.state.correct), this.state.state == false && /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 41\n      }\n    }, \"Time: \", this.state.timer), this.state.state === false && /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 42\n      }\n    }, \"Valid Answers\"), this.state.state === false && /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 42\n      }\n    }, this.state.answers), this.state.state === false && /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 42\n      }\n    }, \"Your Correct Answers\"), this.state.state === false && /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 42\n      }\n    }, this.state.correct), this.state.state === true && /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      justify: \"center\",\n      spacing: 100,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      justify: \"center\",\n      item: true,\n      xs: 12,\n      spacing: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 13\n      }\n    }, Object.keys(gridItems1).map(rowKey => {\n      return /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        key: rowKey,\n        xs: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 19\n        }\n      }, gridItems1[rowKey].label);\n    })), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      justify: \"center\",\n      item: true,\n      xs: 12,\n      spacing: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 13\n      }\n    }, Object.keys(gridItems2).map(rowKey => {\n      return /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        key: rowKey,\n        xs: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 19\n        }\n      }, gridItems2[rowKey].label);\n    })), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      justify: \"center\",\n      item: true,\n      xs: 12,\n      spacing: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 13\n      }\n    }, Object.keys(gridItems3).map(rowKey => {\n      return /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        key: rowKey,\n        xs: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 19\n        }\n      }, gridItems3[rowKey].label);\n    }))), this.state.state === true && /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"white\",\n      prompt: \"Enter Word\",\n      onClick: () => {\n        getUserInput(prompt, this.state.grids[0], this.state.grids[0].dictionary).then(function (result) {\n          console.log(\"Returned\");\n          console.log(result);\n          return result;\n        }).then(value => {\n          if (!this.state.correct.includes(value + \" \") && value != \"\") {\n            this.state.correct.push(value + \" \");\n            this.setState({\n              correct: this.state.correct\n            });\n            console.log(\"STATE:\" + this.state.correct);\n          } else if (value == \"\") {\n            alert(\"This word is not in the dictionary. Please enter another word\");\n          } else {\n            alert(\"You have already found this word. Please enter another word\");\n          }\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 41\n      }\n    }, \"Enter Word\"), /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: () => {\n        console.log(\"Pressed\");\n        console.log(this.state.grids.grid);\n        this.setState({\n          state: true\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 11\n      }\n    }, \" Start \"), /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"secondary\",\n      onClick: () => {\n        console.log(\"Pressed\");\n        this.setState({\n          state: false\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 11\n      }\n    }, \" Stop \")));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/cmaur/Desktop/Software Engineering/boggle-react-app/src/App.js"],"names":["React","useState","BoggleSolver","Grid","Button","TextField","Input","Timer","firebase","styles","TextInput","gridItems1","size","label","gridItems2","gridItems3","validAnswers","findAllSolutions","require","getUserInput","promptText","grid","dict","value","trueGrid","console","log","i","push","promptResoponse","prompt","solutions","forEach","word","response","toLowerCase","App","Component","constructor","props","state","startState","answers","correct","grids","timer","undefined","ref","firestore","componentDidMount","unsubscribe","collection","onSnapshot","querySnapshot","gridArray","doc","data","dictionary","setState","mapToGrid","answer","trueGrid_Mount","render","time","callback","alert","Seconds","Minutes","fontFamily","fontSize","Title","Object","keys","map","rowKey","then","result","includes"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport BoggleSolver from './Boggle Implementation/boggle_solver';\n// import StartButton from './StartButton';\n// import StopButton from './StopButton';\nimport { Grid, Button, TextField, Input } from '@material-ui/core';\nimport Timer from 'react-compound-timer'\nimport * as firebase from 'firebase';\nimport styles from './App.css';\nimport TextInput from './AnswerInput';\n\nconst gridItems1 = {\n  0: { size: 3, label: \"O\" },\n  1: { size: 3, label: \"I\" },\n  2: { size: 3, label: \"H\" },\n}\n\nconst gridItems2 = {\n  0: { size: 3, label: \"V\" },\n  1: { size: 3, label: \"O\" },\n  2: { size: 3, label: \"D\" },\n}\n\nconst gridItems3 = {\n  0: { size: 3, label: \"U\" },\n  1: { size: 3, label: \"S\" },\n  2: { size: 3, label: \"O\" },\n}\n\n\n\nvar validAnswers = [];\n\nconst findAllSolutions = require(\"./Boggle Implementation/boggle_solver\");\n\n\nasync function getUserInput(promptText, grid, dict) {\n\n  var value = \"\";\n  var trueGrid = [];\n  // var grid = Array.from(grid);\n  console.log(grid.size)\n\n  for (let i = 1; i <= grid.size; i++) {\n    trueGrid.push(grid.grid[i]);\n  }\n  console.log(trueGrid)\n  const promptResoponse = prompt(promptText)\n  console.log(promptResoponse);\n\n\n\n  let solutions = findAllSolutions.findAllSolutions(trueGrid, dict)\n\n  solutions.forEach(word => {\n    let response = promptResoponse.toLowerCase();\n    console.log(response)\n    if (word === response) {\n      console.log(\"true\")\n      value = response;\n      console.log(value)\n    }\n  })\n  return value;\n}\n\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      startState: false,\n      answers: validAnswers,\n      word: '',\n      correct: [],\n      grids: [],\n      timer: undefined,\n    }\n    this.ref = firebase.firestore();\n  }\n\n  async componentDidMount() {\n\n    this.unsubscribe = this.ref.collection('3x3').onSnapshot(async (querySnapshot) => {\n      var gridArray = [];\n      querySnapshot.forEach((doc) => {\n        gridArray.push({\n          grid: doc.data().grid,\n          dictionary: doc.data().dictionary,\n          size: doc.data().size,\n        })\n      })\n      console.log(gridArray[0].dictionary);\n      this.setState({\n        grids: gridArray,\n      })\n\n      var mapToGrid = [];\n      for (let i = 1; i <= gridArray[0].size; i++) {\n        mapToGrid.push(gridArray[0].grid[i]);\n      }\n      console.log(mapToGrid)\n\n      let solutions = await findAllSolutions.findAllSolutions(mapToGrid, gridArray[0].dictionary)\n\n      console.log(solutions)\n      await solutions.forEach(answer => {\n        validAnswers.push(answer + \" :\")\n      })\n\n      console.log(this.state.answers)\n\n      this.unsubscribe();\n    })\n\n    var trueGrid_Mount = [];\n    for (let i = 1; i <= this.state.grids.size; i++) {\n      trueGrid_Mount.push(this.state.grids.grid[i]);\n    }\n    console.log(this.state.grids)\n\n\n\n  }\n\n\n\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          {this.state.state == true && <Timer\n            initialTime={0}\n            direction=\"forward\"\n            timeToUpdate={10}\n            checkpoints={[\n              {\n                time: 0,\n                callback: () => alert('countdown finished'),\n              },\n            ]}\n            onPause={() => { this.setState({timer: Timer.Seconds + Timer.Minutes }) }}\n          >\n            <div style={{ fontFamily: 'Helvetica Neue' }}>\n              <div style={{ fontSize: 32 }}>\n                <Timer.Minutes /> minutes\n              <div></div>\n                <Timer.Seconds /> seconds\n              </div>\n            </div>\n          </Timer>}\n          <header classname = {styles.Title} >Boggle Game</header>\n          {this.state.state === true && <p>Correct Answers</p>}\n          {this.state.state === true && <p>{this.state.correct}</p>}\n\n          {this.state.state == false && <p>Time: {this.state.timer}</p>}\n          {this.state.state === false && <p>Valid Answers</p>}\n          {this.state.state === false && <p>{this.state.answers}</p>}\n          {this.state.state === false && <p>Your Correct Answers</p>}\n          {this.state.state === false && <p>{this.state.correct}</p>}\n\n\n          {this.state.state === true && <Grid container justify=\"center\" spacing={100}>\n            {/* Row 1 */}\n            <Grid container justify=\"center\" item xs={12} spacing={3}>\n\n              {Object.keys(gridItems1).map((rowKey) => {\n                return (\n                  <Grid item key={rowKey} xs={3}>\n                    {gridItems1[rowKey].label}\n                  </Grid>\n                );\n              })}\n            </Grid>\n\n            {/* Row 2 */}\n            <Grid container justify=\"center\" item xs={12} spacing={3}>\n              {Object.keys(gridItems2).map((rowKey) => {\n                return (\n                  <Grid item key={rowKey} xs={3}>\n                    {gridItems2[rowKey].label}\n                  </Grid>\n                );\n              })}\n            </Grid>\n\n            {/* Row 3 */}\n            <Grid container justify=\"center\" item xs={12} spacing={3}>\n              {Object.keys(gridItems3).map((rowKey) => {\n                return (\n                  <Grid item key={rowKey} xs={3}>\n                    {gridItems3[rowKey].label}\n                  </Grid>\n                );\n              })}\n            </Grid>\n          </Grid>}\n\n\n          {/* <StartButton promptText=\"Start\" />\n          <StopButton promptText=\"Stop\" />\n          <TextInput promptText=\"Enter Word\" />   */}\n\n          {this.state.state === true && <Button variant=\"contained\" color=\"white\" prompt=\"Enter Word\" onClick={() => {\n            getUserInput(prompt, this.state.grids[0], this.state.grids[0].dictionary).then(function (result) {\n              console.log(\"Returned\");\n              console.log(result);\n              return result;\n            }).then((value) => {\n              if (!this.state.correct.includes(value + \" \") && (value != \"\")) {\n                this.state.correct.push(value + \" \")\n                this.setState({ correct: this.state.correct })\n                console.log(\"STATE:\" + this.state.correct)\n              } else if (value == \"\") {\n                alert(\"This word is not in the dictionary. Please enter another word\")\n              } else {\n                alert(\"You have already found this word. Please enter another word\")\n              }\n\n            })\n\n          }} >Enter Word</Button>}\n\n          <Button variant=\"contained\" color=\"primary\" onClick={() => {\n            console.log(\"Pressed\");\n            console.log(this.state.grids.grid)\n            this.setState({ state: true });\n          }}> Start </Button>\n\n          <Button variant=\"contained\" color=\"secondary\" onClick={() => {\n            console.log(\"Pressed\");\n            this.setState({ state: false });\n          }}> Stop </Button>\n\n        </header>\n      </div>\n    );\n  }\n\n}\n\nexport default App;\n\n"]},"metadata":{},"sourceType":"module"}