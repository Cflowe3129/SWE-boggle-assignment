{"ast":null,"code":"var _jsxFileName = \"/Users/cmaur/Desktop/Software Engineering/boggle-react-app/src/AnswerInput.js\";\nimport React, { useState } from 'react';\n\nconst findAllSolutions = require(\"./Boggle Implementation/boggle_solver\");\n\nfunction TextInput({\n  promptText\n}) {\n  const [text, setText] = useState(\"no text set\");\n\n  function getUserInput() {\n    const promptResoponse = prompt(promptText);\n    console.log(promptResoponse);\n    setText(promptResoponse);\n    let solutions = findAllSolutions.findAllSolutions([['A', 'Qu'], ['C', 'D']], ['art', 'ego', 'gent', 'get', 'net', 'new', 'newt', 'prat', 'pry', 'qua', 'quart', 'quartz', 'rat', 'tar', 'tarp', 'ten', 'went', 'wet', 'arty', 'egg', 'not', 'quar', 'ab', 'abd', 'dca', 'qac']);\n    so;\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => getUserInput(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }, \"Enter Word\"), text);\n}\n\nexport default TextInput;","map":{"version":3,"sources":["/Users/cmaur/Desktop/Software Engineering/boggle-react-app/src/AnswerInput.js"],"names":["React","useState","findAllSolutions","require","TextInput","promptText","text","setText","getUserInput","promptResoponse","prompt","console","log","solutions","so"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,MAAMC,gBAAgB,GAAGC,OAAO,CAAC,uCAAD,CAAhC;;AAEA,SAASC,SAAT,CAAmB;AAAEC,EAAAA;AAAF,CAAnB,EAAmC;AAC/B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,aAAD,CAAhC;;AAEA,WAASO,YAAT,GAAwB;AACpB,UAAMC,eAAe,GAAGC,MAAM,CAACL,UAAD,CAA9B;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAYH,eAAZ;AACAF,IAAAA,OAAO,CAACE,eAAD,CAAP;AAEA,QAAII,SAAS,GAAGX,gBAAgB,CAACA,gBAAjB,CAAkC,CAAC,CAAC,GAAD,EAAM,IAAN,CAAD,EAClD,CAAC,GAAD,EAAM,GAAN,CADkD,CAAlC,EACH,CAAC,KAAD,EAAQ,KAAR,EAAe,MAAf,EAAuB,KAAvB,EAA8B,KAA9B,EAAqC,KAArC,EAA4C,MAA5C,EAAoD,MAApD,EACT,KADS,EACF,KADE,EACK,OADL,EACc,QADd,EACwB,KADxB,EAC+B,KAD/B,EACsC,MADtC,EAET,KAFS,EAEF,MAFE,EAEM,KAFN,EAEa,MAFb,EAEqB,KAFrB,EAE4B,KAF5B,EAEmC,MAFnC,EAE2C,IAF3C,EAEiD,KAFjD,EAEwD,KAFxD,EAE+D,KAF/D,CADG,CAAhB;AAKAY,IAAAA,EAAE;AAEL;;AAED,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAQ,IAAA,OAAO,EAAE,MAAMN,YAAY,EAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAEKF,IAFL,CADJ;AAMH;;AAED,eAAeF,SAAf","sourcesContent":["import React, { useState } from 'react';\n\nconst findAllSolutions = require(\"./Boggle Implementation/boggle_solver\");\n\nfunction TextInput({ promptText }) {\n    const [text, setText] = useState(\"no text set\");\n\n    function getUserInput() {\n        const promptResoponse = prompt(promptText)\n        console.log(promptResoponse);\n        setText(promptResoponse);\n        \n        let solutions = findAllSolutions.findAllSolutions([['A', 'Qu'],\n        ['C', 'D']], ['art', 'ego', 'gent', 'get', 'net', 'new', 'newt', 'prat',\n            'pry', 'qua', 'quart', 'quartz', 'rat', 'tar', 'tarp',\n            'ten', 'went', 'wet', 'arty', 'egg', 'not', 'quar', 'ab', 'abd', 'dca', 'qac'])\n        \n        so\n\n    }\n\n    return (\n        <div>\n            <button onClick={() => getUserInput()}>Enter Word</button>\n            {text}\n        </div>\n    )\n}\n\nexport default TextInput;"]},"metadata":{},"sourceType":"module"}